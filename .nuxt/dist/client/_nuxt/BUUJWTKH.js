import{g as c,q as v,P as i,j as E}from"./Bes98wj2.js";function b(){const s=c(!1),n=c(null),o=v(),t=E(),l=async r=>{s.value=!0,n.value=null;try{return await $fetch(`${t.public.apiBase}/api/animes`,{params:r})}catch(e){throw n.value="Erreur lors du chargement des animes",console.error("Animes API Error:",e),e}finally{s.value=!1}},u=async(r,e)=>{s.value=!0,n.value=null;try{return await $fetch(`${t.public.apiBase}/api/animes/${r}`,{params:e})}catch(a){throw n.value="Erreur lors du chargement de l'anime",console.error("Anime detail API Error:",a),a}finally{s.value=!1}},p=async r=>{s.value=!0,n.value=null;try{return await $fetch(`${t.public.apiBase}/api/animes`,{method:"POST",body:r,headers:o.getAuthHeaders()})}catch(e){throw n.value="Erreur lors de la création de l'anime",console.error("Create anime API Error:",e),e}finally{s.value=!1}},m=async(r,e)=>{s.value=!0,n.value=null;try{return await $fetch(`${t.public.apiBase}/api/animes/${r}`,{method:"PATCH",body:e,headers:o.getAuthHeaders()})}catch(a){throw n.value="Erreur lors de la mise à jour",console.error("Update anime API Error:",a),a}finally{s.value=!1}},h=async r=>{s.value=!0,n.value=null;try{await $fetch(`${t.public.apiBase}/api/animes/${r}`,{method:"DELETE",headers:o.getAuthHeaders()})}catch(e){throw n.value="Erreur lors de la suppression",console.error("Delete anime API Error:",e),e}finally{s.value=!1}},f=async(r=10)=>{try{return await $fetch(`${t.public.apiBase}/api/animes/top`,{params:{limit:r}})}catch(e){return console.error("Error fetching top animes:",e),[]}},y=async(r,e=20)=>{try{return await $fetch(`${t.public.apiBase}/api/animes/genre/${r}`,{params:{limit:e}})}catch(a){return console.error("Error fetching animes by genre:",a),[]}},g=async(r,e)=>{try{return await $fetch(`${t.public.apiBase}/api/animes/autocomplete`,{params:{q:r,...e}})}catch(a){return console.error("Error in anime autocomplete:",a),[]}},$=async()=>{try{return await $fetch(`${t.public.apiBase}/api/animes/genres`)}catch(r){return console.error("Error fetching genres:",r),[]}},d=async r=>{try{return await $fetch(`${t.public.apiBase}/api/animes/${r}/tags`)}catch(e){return console.error("Error fetching anime tags:",e),{tags:[]}}},A=async r=>{try{return await $fetch(`${t.public.apiBase}/api/animes/${r}/relations`)}catch(e){return console.error("Error fetching anime relations:",e),{relations:[]}}};return{loading:i(s),error:i(n),fetchAnimes:l,fetchAnimeById:u,createAnime:p,updateAnime:m,deleteAnime:h,getTopAnimes:f,getAnimesByGenre:y,autocompleteAnimes:g,getGenres:$,getAnimeTags:d,getAnimeRelations:A}}export{b as u};
