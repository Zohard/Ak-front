import{g as M,s as B,x as _,P as C,j as W}from"./Bes98wj2.js";class K{cache=new Map;defaultTTL=300*1e3;set(n,u,c=this.defaultTTL){this.cache.set(n,{data:u,timestamp:Date.now(),expires:Date.now()+c})}get(n){const u=this.cache.get(n);return u?Date.now()>u.expires?(this.cache.delete(n),null):u.data:null}invalidate(n){if(n)for(const u of this.cache.keys())u.includes(n)&&this.cache.delete(u);else this.cache.clear()}size(){return this.cache.size}}const d=new K,h=_(new Map);function j(){const o=M(!1),n=M(null),u=W();B();const c=e=>e.response?{message:e.response._data?.message||e.response.statusText||"API Error",status:e.response.status,code:e.response._data?.code,details:e.response._data}:e.request?{message:"Network error - please check your connection",status:0,code:"NETWORK_ERROR"}:{message:e.message||"Unknown error occurred",status:500,code:"UNKNOWN_ERROR"},p=async(e,a={})=>{const{method:t="GET",body:i,cache:r=t==="GET",cacheTTL:l=300*1e3,retries:w=3,timeout:s=1e4,optimistic:m=!1}=a,S=`${t}:${e}:${JSON.stringify(i||{})}`;if(r&&t==="GET"){const g=d.get(S);if(g)return g}let P;for(let g=1;g<=w;g++)try{const v=new AbortController,R=setTimeout(()=>v.abort(),s),A={method:t,signal:v.signal,headers:{"Content-Type":"application/json"}};i&&t!=="GET"&&(A.body=JSON.stringify(i));let T=e;e.startsWith("/api/proxy/")?T=e:T=`${u.public.apiBase}${e}`;const b=await $fetch(T,A);return clearTimeout(R),r&&t==="GET"&&d.set(S,b,l),b}catch(v){if(P=v,v.response?.status>=400&&v.response?.status<500)break;g<w&&await new Promise(R=>setTimeout(R,Math.pow(2,g)*1e3))}throw c(P)},f=(e,a)=>{const t=[...e];for(const[i,r]of h.entries())if(i.startsWith(a))switch(r.type){case"create":t.unshift(r.data);break;case"update":const l=t.findIndex(s=>s.id===r.data.id||s.idCritique===r.data.id);l>=0&&(t[l]={...t[l],...r.data});break;case"delete":const w=t.findIndex(s=>s.id===r.data.id||s.idCritique===r.data.id);w>=0&&t.splice(w,1);break}return t},y=(e,a,t)=>{h.set(e,{id:e,type:a,data:t,timestamp:Date.now()}),setTimeout(()=>{h.delete(e)},3e4)},E=async e=>{o.value=!0,n.value=null;try{const a=new URLSearchParams;e?.page&&a.append("page",e.page.toString()),e?.limit&&a.append("limit",e.limit.toString()),e?.search&&a.append("search",e.search),e?.idAnime&&a.append("idAnime",e.idAnime.toString()),e?.idManga&&a.append("idManga",e.idManga.toString()),e?.idMembre&&a.append("idMembre",e.idMembre.toString()),e?.statut!==void 0&&a.append("statut",e.statut.toString()),e?.minNotation&&a.append("minNotation",e.minNotation.toString()),e?.sortBy&&a.append("sortBy",e.sortBy),e?.sortOrder&&a.append("sortOrder",e.sortOrder),e?.type&&a.append("type",e.type);const t=`/api/reviews?${a.toString()}`,i=await p(t,{cache:!0,cacheTTL:120*1e3});if(i&&(i.reviews||i.pagination)){const w=Array.isArray(i.reviews)?i.reviews:[],s=i.pagination||{},m=f(w,"review");return{data:m,total:s.total||m.length||0,page:s.page||e?.page||1,limit:s.limit||e?.limit||20,hasMore:s.total?(s.page||1)*(s.limit||20)<s.total:!1}}const r=i?.data||[],l=f(r,"review");return{data:l,total:i?.meta?.total||l.length||0,page:i?.meta?.page||e?.page||1,limit:i?.meta?.limit||e?.limit||20,hasMore:i?.meta?.hasMore||!1}}catch(a){const t=c(a);throw n.value=t,console.error("Reviews API Error:",t),t}finally{o.value=!1}},I=async e=>{o.value=!0,n.value=null;try{const a=typeof e=="number"||typeof e=="string"&&/^\d+$/.test(e),t=a?`/api/reviews/${e}`:`/api/reviews/slug/${encodeURIComponent(e)}`;let i=await p(t,{cache:!0,cacheTTL:600*1e3});if(!a&&(!i||typeof i=="string"||i?.message?.includes("Cannot GET"))){const r=await p(`/api/reviews?search=${encodeURIComponent(e)}&limit=1`,{cache:!0}),l=r?.reviews||r?.data||[];if(l.length)return l[0]}return i&&(i.id||i.idCritique)?i:i?.data}catch(a){const t=c(a);throw n.value=t,console.error("Review detail API Error:",t),t}finally{o.value=!1}},U=async(e=10,a="week",t)=>{try{const i=new URLSearchParams;i.append("limit",e.toString()),i.append("period",a),t&&i.append("type",t);const r=await p(`/api/reviews/top?${i.toString()}`,{cache:!0,cacheTTL:900*1e3});return r?.topReviews?{data:r.topReviews}:{data:r?.data||[]}}catch(i){return console.error("Error fetching top reviews:",c(i)),{data:[]}}},L=async(e,a=20)=>{try{const t=new URLSearchParams;t.append("limit",a.toString());const i=await p(`/api/reviews/user/${e}?${t.toString()}`,{cache:!0,cacheTTL:300*1e3}),r=i?.reviews||i?.data||[];return{data:f(r,"review")}}catch(t){return console.error("Error fetching user reviews:",c(t)),{data:[]}}},O=async(e={})=>{o.value=!0,n.value=null;try{const a=new URLSearchParams;e.page&&a.append("page",e.page.toString()),e.limit&&a.append("limit",e.limit.toString());const t=await p(`/api/reviews/my-reviews?${a.toString()}`,{cache:!1}),i=t?.reviews||t?.data||[],r=t?.total||t?.meta?.total||i.length||0;return{data:f(i,"review"),total:r,page:e.page||1,limit:e.limit||20,hasMore:r?(e.page||1)*(e.limit||20)<r:!1}}catch(a){const t=c(a);throw n.value=t,console.error("My reviews API Error:",t),t}finally{o.value=!1}},q=async e=>{o.value=!0,n.value=null;const a=`temp-${Date.now()}`,t={idCritique:a,titre:e.titre,contenu:e.content,notation:e.rating,dateCritique:new Date().toISOString(),statut:1,estPublique:e.isPublic??!0,idMembre:0,idAnime:e.idAnime||0,idManga:e.idManga||0,tags:e.tags,nbVues:0,slug:e.titre.toLowerCase().replace(/[^a-z0-9]+/g,"-")};try{y(`review-${a}`,"create",t);const i={titre:e.titre||e.title,critique:e.content,notation:e.rating,idAnime:e.idAnime,idManga:e.idManga},r=await p("/api/reviews",{method:"POST",body:i});return h.delete(`review-${a}`),d.invalidate("/api/reviews"),d.invalidate("/api/reviews/my-reviews"),r}catch(i){h.delete(`review-${a}`);const r=c(i);throw n.value=r,console.error("Create review API Error:",r),r}finally{o.value=!1}},N=async(e,a)=>{o.value=!0,n.value=null;try{y(`review-update-${e}`,"update",{id:e,...a});const t={...a};a.title&&(t.titre=a.title,delete t.title),a.content&&(t.critique=a.content,delete t.content),a.rating&&(t.notation=a.rating,delete t.rating);const i=await p(`/api/reviews/${e}`,{method:"PATCH",body:t});return h.delete(`review-update-${e}`),d.invalidate(`/api/reviews/${e}`),d.invalidate("/api/reviews"),i}catch(t){h.delete(`review-update-${e}`);const i=c(t);throw n.value=i,console.error("Update review API Error:",i),i}finally{o.value=!1}},x=async e=>{o.value=!0,n.value=null;try{y(`review-delete-${e}`,"delete",{id:e});const a=await p(`/api/reviews/${e}`,{method:"DELETE"});return h.delete(`review-delete-${e}`),d.invalidate(`/api/reviews/${e}`),d.invalidate("/api/reviews"),a}catch(a){h.delete(`review-delete-${e}`);const t=c(a);throw n.value=t,console.error("Delete review API Error:",t),t}finally{o.value=!1}},k=()=>{d.invalidate()},$=()=>{d.invalidate("/api/reviews")},z=async e=>($(),await E(e)),G=async(e="all",a="both")=>{try{const t=new URLSearchParams;t.append("period",e),t.append("type",a);const i=await p(`/api/reviews/stats?${t.toString()}`,{cache:!0,cacheTTL:600*1e3});return{data:i.success?i.data:{totalReviews:0,publishedReviews:0,averageRating:0,totalViews:0,topReviewers:[],popularMedia:[],recentActivity:[]}}}catch(t){return console.error("Error fetching review stats:",c(t)),{data:{totalReviews:0,publishedReviews:0,averageRating:0,totalViews:0,topReviewers:[],popularMedia:[],recentActivity:[]}}}};return{loading:C(o),error:C(n),fetchReviews:E,fetchReviewById:I,getTopReviews:U,getUserReviews:L,getMyReviews:O,getReviewStats:G,createReview:q,updateReview:N,deleteReview:x,clearCache:k,clearReviewsCache:$,refreshReviews:z,addOptimisticUpdate:y,handleAPIError:c,getCacheSize:()=>d.size(),getOptimisticUpdatesCount:()=>h.size}}export{j as u};
